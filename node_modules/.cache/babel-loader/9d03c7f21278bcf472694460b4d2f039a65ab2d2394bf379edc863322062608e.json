{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\takum\\\\Documents\\\\GitHub\\\\ShapeMakerP5js\\\\src\\\\segment\\\\Operation.js\";\n/* **************************************** */\n/*                操作画面                  */\n/* *************************************** */\n/* < 実装内容 >                             */\n/* Operation: 操作画面全体，ボタン関連の処理 */\n/* - 画像挿入                               */\n/* - クリア                                 */\n/* - 取り消し関連                           */\n/* - コードの生成                           */\n/* Canvas: キャンバス(造形箇所)              */\n/* **************************************** */\nimport Sketch from \"react-p5\";\nimport { optionInfo } from \"../App\";\nimport { opeInfo } from \"../App\";\nimport { createVector } from \"./p5js/libOriginal/p5jsOrigin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet history = []; // 操作履歴\nlet delHistory = []; // 削除した操作履歴\n\n// 操作画面内の固定テキスト\nconst str = {\n  // ボタン\n  btn: {\n    importImage: \"Import Image\",\n    clear: \"頂点のクリア\",\n    generateCode: \"Generate Code\",\n    undo: \"←\",\n    redo: \"→\"\n  }\n};\nexport default function Operation(_ref) {\n  let {\n    generateCode,\n    className\n  } = _ref;\n  // 操作の取り消し\n  function undo() {\n    if (history.length <= 1) return;\n    delHistory.push(history.pop());\n    opeInfo.vertexes = history[history.length - 1].slice();\n    generateCode();\n  }\n\n  // 「操作の取り消し」の取り消し\n  function redo() {\n    if (delHistory.length < 1) return;\n    history.push(delHistory.pop());\n    opeInfo.vertexes = history[history.length - 1].slice();\n    generateCode();\n  }\n\n  // 全頂点の削除\n  function clear() {\n    if (opeInfo.vertexes.length != 0) {\n      opeInfo.vertexes = [].slice();\n      history.push(opeInfo.vertexes.slice());\n      delHistory = [];\n      generateCode();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Operation\",\n    className: className,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Operation\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"OperationTopButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clear,\n          className: \"leftButton\",\n          children: [\" \", str.btn.clear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n        CanvasId: \"Canvas\",\n        generateCode: generateCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"OperationBottomButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: undo,\n          className: \"leftButton\",\n          children: str.btn.undo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: redo,\n          className: \"rightButton\",\n          children: str.btn.redo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c = Operation;\nfunction Canvas(_ref2) {\n  let {\n    CanvasId,\n    generateCode\n  } = _ref2;\n  let vertexRadius = 5; // 頂点を描画する円の半径\n\n  const setup = (p5, canvasParentRef) => {\n    // 画面左半分の横幅(style.css の --main-left-width と同じ値)を算出する\n    let main_left_width = 0.5 * document.getElementById('root').clientWidth;\n    // 左コンテンツの横幅(style.css の --main-left-contents と同じ値)を算出する\n    let main_left_contents = 0.55;\n    let w = main_left_contents * main_left_width;\n    if (w > document.getElementById('Operation').clientHeight) {\n      console.log(\"canvas size was chasnged\");\n      w = 0.8 * document.getElementById('Operation').clientHeight;\n    }\n    p5.createCanvas(w, w).parent(canvasParentRef);\n    p5.strokeWeight(1);\n    p5.rectMode(p5.CENTER);\n    history.push(opeInfo.vertexes.slice());\n\n    /* p5のスケッチ内容を梱包している要素の幅を調整する */\n    let sketchNode = document.getElementById(CanvasId);\n    let sketchWrapper = sketchNode.childNodes[0];\n    sketchWrapper.style.width = w + 'px';\n    sketchWrapper.style.height = w + 'px';\n  };\n  const draw = p5 => {\n    p5.background(200);\n    p5.push();\n    p5.translate(p5.width / 2, p5.height / 2);\n\n    // 図形の描画\n    shaper(p5); // p5オブジェクトを引数として渡す\n\n    // 座標軸の描画\n    p5.push();\n    p5.stroke(0, 0, 255);\n    p5.line(0, -p5.height / 2, 0, p5.height / 2); // y軸\n    p5.stroke(255, 0, 0);\n    p5.line(-p5.width / 2, 0, p5.width / 2, 0); // x軸\n    p5.pop();\n\n    // 点の描画\n    if (opeInfo.vertexes.length > 0) {\n      // 頂点の描画: 始点\n      p5.fill(255, 0, 0);\n      p5.ellipse(opeInfo.vertexes[0].x, opeInfo.vertexes[0].y, vertexRadius, vertexRadius);\n\n      // 頂点の描画: 中間に定義した点\n      for (let i = 1; i < opeInfo.vertexes.length - 1; i++) {\n        p5.fill(0);\n        p5.ellipse(opeInfo.vertexes[i].x, opeInfo.vertexes[i].y, vertexRadius, vertexRadius);\n      }\n\n      // 頂点の描画: 終点\n      p5.fill(0, 0, 255);\n      p5.ellipse(opeInfo.vertexes[opeInfo.vertexes.length - 1].x, opeInfo.vertexes[opeInfo.vertexes.length - 1].y, vertexRadius, vertexRadius);\n\n      // 重心の描画\n      p5.fill(0, 255, 0);\n      p5.translate(opeInfo.center.x, opeInfo.center.y);\n      p5.rotate(p5.PI / 4); // 45度の回転\n\n      if (opeInfo.vertexes.length >= 3) p5.rect(0, 0, vertexRadius, vertexRadius);\n    }\n    p5.pop();\n  };\n  const mousePressed = p5 => {\n    // キャンバス外のクリックは無視する\n    if (p5.mouseX < 0 || p5.width < p5.mouseX || p5.mouseY < 0 || p5.height < p5.mouseY) return;\n\n    // 頂点の追加\n    opeInfo.vertexes.push(createVector(p5.mouseX - p5.width / 2, p5.mouseY - p5.height / 2));\n\n    // 頂点履歴の更新\n    history.push(opeInfo.vertexes.slice());\n    delHistory = [];\n    generateCode();\n  };\n  function shaper(p5) {\n    // 頂点が未定義であるときは描画しない\n    if (opeInfo.vertexes.length === 0) {\n      return;\n    }\n    p5.push();\n    p5.stroke(0);\n    p5.beginShape();\n\n    // 頂点を結ぶ線が直線であるか曲線か\n    if (!optionInfo.isCurveVertex) {\n      for (let i = 0; i < opeInfo.vertexes.length; i++) {\n        p5.vertex(opeInfo.vertexes[i].x, opeInfo.vertexes[i].y);\n      }\n\n      // 始点から終点を結ぶか否か\n      if (!optionInfo.isClose) {\n        p5.endShape();\n      } else {\n        p5.endShape(p5.CLOSE);\n      }\n    } else {\n      // 始点から終点を結ぶか否か\n      if (!optionInfo.isClose) {\n        p5.curveVertex(opeInfo.vertexes[0].x, opeInfo.vertexes[0].y);\n        for (let i = 0; i < opeInfo.vertexes.length; i++) p5.curveVertex(opeInfo.vertexes[i].x, opeInfo.vertexes[i].y);\n        p5.curveVertex(opeInfo.vertexes[opeInfo.vertexes.length - 1].x, opeInfo.vertexes[opeInfo.vertexes.length - 1].y);\n        p5.endShape();\n      } else {\n        if (opeInfo.vertexes.length < 3) {\n          p5.curveVertex(opeInfo.vertexes[0].x, opeInfo.vertexes[0].y);\n          for (let i = 0; i < opeInfo.vertexes.length; i++) p5.curveVertex(opeInfo.vertexes[i].x, opeInfo.vertexes[i].y);\n          p5.endShape(p5.CLOSE);\n        } else {\n          for (let i = 0; i < opeInfo.vertexes.length; i++) p5.curveVertex(opeInfo.vertexes[i].x, opeInfo.vertexes[i].y);\n          for (let i = 0; i < 3; i++) p5.curveVertex(opeInfo.vertexes[i].x, opeInfo.vertexes[i].y);\n          p5.endShape();\n        }\n      }\n    }\n    p5.pop();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: CanvasId,\n    children: /*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw,\n      mousePressed: mousePressed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Canvas;\n;\nvar _c, _c2;\n$RefreshReg$(_c, \"Operation\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["Sketch","optionInfo","opeInfo","createVector","jsxDEV","_jsxDEV","history","delHistory","str","btn","importImage","clear","generateCode","undo","redo","Operation","_ref","className","length","push","pop","vertexes","slice","id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Canvas","CanvasId","_c","_ref2","vertexRadius","setup","p5","canvasParentRef","main_left_width","document","getElementById","clientWidth","main_left_contents","w","clientHeight","console","log","createCanvas","parent","strokeWeight","rectMode","CENTER","sketchNode","sketchWrapper","childNodes","style","width","height","draw","background","translate","shaper","stroke","line","fill","ellipse","x","y","i","center","rotate","PI","rect","mousePressed","mouseX","mouseY","beginShape","isCurveVertex","vertex","isClose","endShape","CLOSE","curveVertex","_c2","$RefreshReg$"],"sources":["C:/Users/takum/Documents/GitHub/ShapeMakerP5js/src/segment/Operation.js"],"sourcesContent":["/* **************************************** */\r\n/*                操作画面                  */\r\n/* *************************************** */\r\n/* < 実装内容 >                             */\r\n/* Operation: 操作画面全体，ボタン関連の処理 */\r\n/* - 画像挿入                               */\r\n/* - クリア                                 */\r\n/* - 取り消し関連                           */\r\n/* - コードの生成                           */\r\n/* Canvas: キャンバス(造形箇所)              */\r\n/* **************************************** */\r\nimport Sketch from \"react-p5\";\r\nimport { optionInfo } from \"../App\";\r\nimport { opeInfo } from \"../App\";\r\nimport { createVector } from \"./p5js/libOriginal/p5jsOrigin\";\r\n\r\nlet history = [];     // 操作履歴\r\nlet delHistory = [];  // 削除した操作履歴\r\n\r\n// 操作画面内の固定テキスト\r\nconst str = {\r\n  // ボタン\r\n  btn:\r\n  {\r\n    importImage: \"Import Image\",\r\n    clear: \"頂点のクリア\",\r\n    generateCode: \"Generate Code\",\r\n    undo: \"←\",\r\n    redo: \"→\",\r\n  },\r\n};\r\n\r\nexport default function Operation({ generateCode, className }) {\r\n  // 操作の取り消し\r\n  function undo() {\r\n    if (history.length <= 1) return;\r\n\r\n    delHistory.push(history.pop());\r\n    opeInfo.vertexes = history[history.length - 1].slice();\r\n    generateCode();\r\n  }\r\n\r\n  // 「操作の取り消し」の取り消し\r\n  function redo() {\r\n    if (delHistory.length < 1) return;\r\n\r\n    history.push(delHistory.pop());\r\n    opeInfo.vertexes = history[history.length - 1].slice();\r\n    generateCode();\r\n  }\r\n\r\n  // 全頂点の削除\r\n  function clear() {\r\n    if (opeInfo.vertexes.length != 0) {\r\n      opeInfo.vertexes = [].slice();\r\n      history.push(opeInfo.vertexes.slice());\r\n      delHistory = [];\r\n      generateCode();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"Operation\" className={className}>\r\n      <div className=\"Operation\">\r\n        <div className=\"OperationTopButton\">\r\n          <button onClick={clear} className=\"leftButton\" > {str.btn.clear}</button>\r\n        </div>\r\n\r\n        <Canvas CanvasId=\"Canvas\" generateCode={generateCode} />\r\n\r\n        <div className=\"OperationBottomButton\">\r\n          <button onClick={undo} className=\"leftButton\" >{str.btn.undo}</button>\r\n          <button onClick={redo} className=\"rightButton\" >{str.btn.redo}</button>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nfunction Canvas({ CanvasId, generateCode }) {\r\n  let vertexRadius = 5; // 頂点を描画する円の半径\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    // 画面左半分の横幅(style.css の --main-left-width と同じ値)を算出する\r\n    let main_left_width = 0.5 * document.getElementById('root').clientWidth;\r\n    // 左コンテンツの横幅(style.css の --main-left-contents と同じ値)を算出する\r\n    let main_left_contents = 0.55;\r\n\r\n    let w = main_left_contents * main_left_width;\r\n\r\n    if (w > document.getElementById('Operation').clientHeight) {\r\n      console.log(\"canvas size was chasnged\")\r\n      w = 0.8 * document.getElementById('Operation').clientHeight\r\n    }\r\n\r\n    p5.createCanvas(w, w).parent(canvasParentRef);\r\n\r\n    p5.strokeWeight(1);\r\n    p5.rectMode(p5.CENTER);\r\n\r\n    history.push(opeInfo.vertexes.slice());\r\n\r\n    /* p5のスケッチ内容を梱包している要素の幅を調整する */\r\n    let sketchNode = document.getElementById(CanvasId);\r\n    let sketchWrapper = sketchNode.childNodes[0];\r\n    sketchWrapper.style.width = w + 'px';\r\n    sketchWrapper.style.height = w + 'px';\r\n  };\r\n\r\n  const draw = (p5) => {\r\n    p5.background(200);\r\n\r\n    p5.push();\r\n    p5.translate(p5.width / 2, p5.height / 2);\r\n\r\n    // 図形の描画\r\n    shaper(p5); // p5オブジェクトを引数として渡す\r\n\r\n    // 座標軸の描画\r\n    p5.push();\r\n    p5.stroke(0, 0, 255);\r\n    p5.line(0, -p5.height / 2, 0, p5.height / 2); // y軸\r\n    p5.stroke(255, 0, 0);\r\n    p5.line(-p5.width / 2, 0, p5.width / 2, 0);   // x軸\r\n    p5.pop();\r\n\r\n    // 点の描画\r\n    if (opeInfo.vertexes.length > 0) {\r\n      // 頂点の描画: 始点\r\n      p5.fill(255, 0, 0);\r\n      p5.ellipse(opeInfo.vertexes[0].x, opeInfo.vertexes[0].y, vertexRadius, vertexRadius);\r\n\r\n      // 頂点の描画: 中間に定義した点\r\n      for (let i = 1; i < opeInfo.vertexes.length - 1; i++) {\r\n        p5.fill(0);\r\n        p5.ellipse(opeInfo.vertexes[i].x, opeInfo.vertexes[i].y, vertexRadius, vertexRadius);\r\n      }\r\n\r\n      // 頂点の描画: 終点\r\n      p5.fill(0, 0, 255);\r\n      p5.ellipse(\r\n        opeInfo.vertexes[opeInfo.vertexes.length - 1].x,\r\n        opeInfo.vertexes[opeInfo.vertexes.length - 1].y,\r\n        vertexRadius,\r\n        vertexRadius\r\n      );\r\n\r\n      // 重心の描画\r\n      p5.fill(0, 255, 0);\r\n      p5.translate(opeInfo.center.x, opeInfo.center.y);\r\n      p5.rotate(p5.PI / 4);  // 45度の回転\r\n\r\n      if (opeInfo.vertexes.length >= 3)\r\n        p5.rect(0, 0, vertexRadius, vertexRadius);\r\n\r\n    }\r\n    p5.pop();\r\n  };\r\n\r\n  const mousePressed = (p5) => {\r\n    // キャンバス外のクリックは無視する\r\n    if (p5.mouseX < 0 || p5.width < p5.mouseX || p5.mouseY < 0 || p5.height < p5.mouseY)\r\n      return;\r\n\r\n    // 頂点の追加\r\n    opeInfo.vertexes.push(createVector(p5.mouseX - p5.width / 2, p5.mouseY - p5.height / 2));\r\n\r\n    // 頂点履歴の更新\r\n    history.push(opeInfo.vertexes.slice());\r\n    delHistory = [];\r\n    generateCode();\r\n  };\r\n\r\n  function shaper(p5) {\r\n    // 頂点が未定義であるときは描画しない\r\n    if (opeInfo.vertexes.length === 0) {\r\n      return;\r\n    }\r\n\r\n    p5.push();\r\n    p5.stroke(0);\r\n    p5.beginShape();\r\n\r\n    // 頂点を結ぶ線が直線であるか曲線か\r\n    if (!optionInfo.isCurveVertex) {\r\n      for (let i = 0; i < opeInfo.vertexes.length; i++) {\r\n        p5.vertex(opeInfo.vertexes[i].x, opeInfo.vertexes[i].y);\r\n      }\r\n\r\n      // 始点から終点を結ぶか否か\r\n      if (!optionInfo.isClose) {\r\n        p5.endShape();\r\n      } else {\r\n        p5.endShape(p5.CLOSE);\r\n      }\r\n    } else {\r\n      // 始点から終点を結ぶか否か\r\n      if (!optionInfo.isClose) {\r\n        p5.curveVertex(opeInfo.vertexes[0].x, opeInfo.vertexes[0].y);\r\n\r\n        for (let i = 0; i < opeInfo.vertexes.length; i++)\r\n          p5.curveVertex(opeInfo.vertexes[i].x, opeInfo.vertexes[i].y);\r\n\r\n        p5.curveVertex(opeInfo.vertexes[opeInfo.vertexes.length - 1].x, opeInfo.vertexes[opeInfo.vertexes.length - 1].y);\r\n\r\n        p5.endShape();\r\n      } else {\r\n        if (opeInfo.vertexes.length < 3) {\r\n          p5.curveVertex(opeInfo.vertexes[0].x, opeInfo.vertexes[0].y);\r\n\r\n          for (let i = 0; i < opeInfo.vertexes.length; i++)\r\n            p5.curveVertex(opeInfo.vertexes[i].x, opeInfo.vertexes[i].y);\r\n\r\n          p5.endShape(p5.CLOSE);\r\n        } else {\r\n          for (let i = 0; i < opeInfo.vertexes.length; i++)\r\n            p5.curveVertex(opeInfo.vertexes[i].x, opeInfo.vertexes[i].y);\r\n\r\n          for (let i = 0; i < 3; i++)\r\n            p5.curveVertex(opeInfo.vertexes[i].x, opeInfo.vertexes[i].y);\r\n\r\n          p5.endShape();\r\n        }\r\n      }\r\n    }\r\n    p5.pop();\r\n  }\r\n\r\n  return (\r\n    <div id={CanvasId}>\r\n      <Sketch\r\n        setup={setup}\r\n        draw={draw}\r\n        mousePressed={mousePressed}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}