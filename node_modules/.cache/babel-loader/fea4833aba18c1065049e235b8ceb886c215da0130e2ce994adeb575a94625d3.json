{"ast":null,"code":"import _slicedToArray from\"C:/Users/takum/Documents/GitHub/ShapeMakerP5js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import\"./styles.css\";import Operation from'./segment/Operation';import Option from'./segment/Option';import Code from'./segment/Code';import Background from'./segment/p5js/Background';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var optionInfo={isCurveVertex:false,isClose:true,center:{num:0,mode:[\"BARYCENTER\",\"ORIGIN\"]}};// 頂点情報\nexport var opeInfo={vertexes:[],center:{x:0,y:0}};export default function App(){// コードの内容\nvar _useState=useState(\"関数名を定義してください\"),_useState2=_slicedToArray(_useState,2),completeGeneratedCode=_useState2[0],setCompleteGeneratedCode=_useState2[1];var generatedCode=\"\";// 生成されたコードとして表示する文字列\nvar functionName=\"\";// 関数名\nvar vertexDefinition=[];// 頂点の定義情報\nvar vertexPutCode=\"\";// 頂点の配置(図形の描画)コード\n// プログラムのコードを生成する関数(updateの内容のみ変更する)\nfunction generateCode(){vertexDefinition=normalizeVertex(opeInfo.vertexes).slice();functionName=document.getElementById(\"functionName\").value;vertexPutCode=generateVertexPutCode();// 表示する文字列の作成\nif(functionName.length==0){// 関数名が未定義であるとき\ngeneratedCode=\"関数名を定義してください\";}else if(opeInfo.vertexes.length<3){// 描画内容が点や線であるとき\ngeneratedCode=\"頂点を3つ以上定義してください\";}else{// 描画コードを作成する\n// 関数と引数，頂点の定義\ngeneratedCode=\"function \".concat(functionName,\" (x, y, w, h){\\n  // \\u9802\\u70B9\\u5EA7\\u6A19\\u306E\\u5B9A\\u7FA9\\n  let v = [\\n\");for(var i=0;i<vertexDefinition.length;i++){generatedCode+=\"    createVector(\".concat(vertexDefinition[i].x,\", \").concat(vertexDefinition[i].y,\" )\");if(i<vertexDefinition.length-1)generatedCode+=\",\\n\";else generatedCode+=\"\\n\";}// 頂点の定義(終了)と図形の描画開始\ngeneratedCode+=\"  ];\\n\\n  // 描画スタイルの設定\\n  push();\\n  translate(x, y);\\n\\n  // 図形の描画\\n  beginShape();\\n\";// 頂点を配置して輪郭を描画するコード\ngeneratedCode+=vertexPutCode;// 描画および関数の終了\ngeneratedCode+=\"\\n  // \\u63CF\\u753B\\u30B9\\u30BF\\u30A4\\u30EB\\u306E\\u5FA9\\u5143\\n  pop();\\n}\";}// コードの表示\nsetCompleteGeneratedCode(generatedCode);}// 中心の定義と頂点情報の正規化\nfunction normalizeVertex(vertexes){var normalizedVertex=[];// 図形の中心座標の初期化\nopeInfo.center.x=0;opeInfo.center.y=0;// 図形の端の座標値\nvar max={x:0,y:0};// 図形の中心座標を算出する\nswitch(optionInfo.center.mode[optionInfo.center.num]){case optionInfo.center.mode[0]:// 重心\nfor(var i=0;i<vertexes.length;i++){opeInfo.center.x+=vertexes[i].x;opeInfo.center.y+=vertexes[i].y;}opeInfo.center.x/=vertexes.length;opeInfo.center.y/=vertexes.length;break;case optionInfo.center.mode[1]:// 座標軸の原点軸\nopeInfo.center.x/=vertexes.length;opeInfo.center.y/=vertexes.length;break;default:// 想定外の処理(実行されない)\nconsole.warn(\"normalizeVertex >> Unknown request \".concat(optionInfo.center.num,\".\"));break;}// 中心からみたx, y座標の最大値を取得する\nfor(var _i=0;_i<vertexes.length;_i++){var relative={x:Math.max(vertexes[_i].x,opeInfo.center.x)-Math.min(vertexes[_i].x,opeInfo.center.x),y:Math.max(vertexes[_i].y,opeInfo.center.y)-Math.min(vertexes[_i].y,opeInfo.center.y)};if(max.x<relative.x)max.x=relative.x;if(max.y<relative.y)max.y=relative.y;}// 頂点の正規化\nfor(var _i2=0;_i2<vertexes.length;_i2++){normalizedVertex.push({x:Math.round((vertexes[_i2].x-opeInfo.center.x)/max.x*1000)/1000,y:Math.round((vertexes[_i2].y-opeInfo.center.y)/max.y*1000)/1000});}return normalizedVertex;}// 描画コードを変更する関数\nfunction generateVertexPutCode(){var generatedVertexPutCode=\"\";// 頂点を結ぶ線が直線であるか曲線か\nif(!optionInfo.isCurveVertex){// 頂点の定義\ngeneratedVertexPutCode+=\"  for (let i = 0; i < v.length; i++)\\n    vertex(v[i].x * w, v[i].y * h);\\n\";// 始点から終点を結ぶか否か\nif(!optionInfo.isClose){generatedVertexPutCode+=\"  endShape();\\n\";}else{generatedVertexPutCode+=\"  endShape(CLOSE);\\n\";}}else{// 始点から終点を結ぶか否か\nif(!optionInfo.isClose){// 調整として始点の定義\ngeneratedVertexPutCode+=\"  curveVertex(v[0].x*w, v[0].y*h);\\n\";// 頂点の配置\ngeneratedVertexPutCode+=\"  for (let i = 0; i < v.length; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n\";// 調整として終点の再定義・図形を閉じる\ngeneratedVertexPutCode+=\"  curveVertex(v[v.length - 1].x*w, v[v.length - 1].y*h);\\n  endShape();\\n\";}else{if(opeInfo.vertexes.length<3){// 調整として始点の定義\ngeneratedVertexPutCode+=\"  curveVertex(v[0].x*w, v[0].y*h);\\n\";// 頂点の配置と図形を閉じる\ngeneratedVertexPutCode+=\"  for (let i = 0; i < v.length; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n  endShape(CLOSE);\\n\";}else{// 頂点の配置\ngeneratedVertexPutCode+=\"  for (let i = 0; i < v.length; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n\";// 滑らかに図形を描画するために頂点の再配置\ngeneratedVertexPutCode+=\"  for (let i = 0; i < 3; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n  endShape();\\n\";}}}return generatedVertexPutCode;}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Background,{BackgroundId:\"Background\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"Contents\",children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Shape Maker p5.js\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"hyperlink\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"https://editor.p5js.org/\",children:\"p5.js Web Editor\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"https://openprocessing.org/\",children:\"OpenProcessing\"})})]})})]}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(Operation,{generateCode:generateCode,className:\"mainLeftContent\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mainRightContent\",children:[/*#__PURE__*/_jsx(Option,{generateCode:generateCode}),/*#__PURE__*/_jsx(Code,{generateCode:generateCode,generatedCode:completeGeneratedCode})]})]})]})]});}","map":{"version":3,"names":["useState","Operation","Option","Code","Background","jsx","_jsx","jsxs","_jsxs","optionInfo","isCurveVertex","isClose","center","num","mode","opeInfo","vertexes","x","y","App","_useState","_useState2","_slicedToArray","completeGeneratedCode","setCompleteGeneratedCode","generatedCode","functionName","vertexDefinition","vertexPutCode","generateCode","normalizeVertex","slice","document","getElementById","value","generateVertexPutCode","length","concat","i","normalizedVertex","max","console","warn","relative","Math","min","push","round","generatedVertexPutCode","className","children","BackgroundId","id","href"],"sources":["C:/Users/takum/Documents/GitHub/ShapeMakerP5js/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport \"./styles.css\";\nimport Operation from './segment/Operation';\nimport Option from './segment/Option'\nimport Code from './segment/Code'\nimport Background from './segment/p5js/Background'\n\nexport let optionInfo = {\n  isCurveVertex: false,\n  isClose: true,\n  center: {\n    num: 0,\n    mode: [\n      \"BARYCENTER\",\n      \"ORIGIN\",\n    ]\n  },\n};\n\n// 頂点情報\nexport let opeInfo = {\n  vertexes: [],\n  center: {\n    x: 0,\n    y: 0,\n  },\n};\n\nexport default function App() {\n  // コードの内容\n  const [completeGeneratedCode, setCompleteGeneratedCode] = useState(\"関数名を定義してください\");\n  let generatedCode = \"\";         // 生成されたコードとして表示する文字列\n  let functionName = \"\";          // 関数名\n  let vertexDefinition = [];      // 頂点の定義情報\n  let vertexPutCode = \"\";         // 頂点の配置(図形の描画)コード\n\n  // プログラムのコードを生成する関数(updateの内容のみ変更する)\n  function generateCode() {\n    vertexDefinition = normalizeVertex(opeInfo.vertexes).slice();\n    functionName = document.getElementById(\"functionName\").value;\n    vertexPutCode = generateVertexPutCode();\n\n    // 表示する文字列の作成\n    if (functionName.length == 0) {             // 関数名が未定義であるとき\n      generatedCode = \"関数名を定義してください\";\n    } else if (opeInfo.vertexes.length < 3) {   // 描画内容が点や線であるとき\n      generatedCode = \"頂点を3つ以上定義してください\";\n    } else {                                    // 描画コードを作成する\n      // 関数と引数，頂点の定義\n      generatedCode = `function ${functionName} (x, y, w, h){\\n  // 頂点座標の定義\\n  let v = [\\n`;\n\n      for (let i = 0; i < vertexDefinition.length; i++) {\n        generatedCode += `    createVector(${vertexDefinition[i].x}, ${vertexDefinition[i].y} )`;\n\n        if (i < (vertexDefinition.length - 1))\n          generatedCode += \",\\n\";\n        else\n          generatedCode += \"\\n\";\n      }\n\n      // 頂点の定義(終了)と図形の描画開始\n      generatedCode += \"  ];\\n\\n  // 描画スタイルの設定\\n  push();\\n  translate(x, y);\\n\\n  // 図形の描画\\n  beginShape();\\n\";\n\n      // 頂点を配置して輪郭を描画するコード\n      generatedCode += vertexPutCode;\n\n      // 描画および関数の終了\n      generatedCode += `\\n  // 描画スタイルの復元\\n  pop();\\n}`;\n    }\n\n    // コードの表示\n    setCompleteGeneratedCode(generatedCode);\n  }\n\n  // 中心の定義と頂点情報の正規化\n  function normalizeVertex(vertexes) {\n    let normalizedVertex = [];\n\n    // 図形の中心座標の初期化\n    opeInfo.center.x = 0;\n    opeInfo.center.y = 0;\n\n    // 図形の端の座標値\n    let max = {\n      x: 0,\n      y: 0,\n    };\n\n    // 図形の中心座標を算出する\n    switch (optionInfo.center.mode[optionInfo.center.num]) {\n      case optionInfo.center.mode[0]: // 重心\n        for (let i = 0; i < vertexes.length; i++) {\n          opeInfo.center.x += vertexes[i].x;\n          opeInfo.center.y += vertexes[i].y;\n        }\n        opeInfo.center.x /= vertexes.length;\n        opeInfo.center.y /= vertexes.length;\n        break;\n      case optionInfo.center.mode[1]: // 座標軸の原点軸\n        opeInfo.center.x /= vertexes.length;\n        opeInfo.center.y /= vertexes.length;\n        break;\n      default:                        // 想定外の処理(実行されない)\n        console.warn(`normalizeVertex >> Unknown request ${optionInfo.center.num}.`);\n        break;\n    }\n\n    // 中心からみたx, y座標の最大値を取得する\n    for (let i = 0; i < vertexes.length; i++) {\n      let relative = {\n        x: Math.max(vertexes[i].x, opeInfo.center.x) - Math.min(vertexes[i].x, opeInfo.center.x),\n        y: Math.max(vertexes[i].y, opeInfo.center.y) - Math.min(vertexes[i].y, opeInfo.center.y),\n      }\n\n\n      if (max.x < relative.x)\n        max.x = relative.x;\n\n      if (max.y < relative.y)\n        max.y = relative.y;\n    }\n\n    // 頂点の正規化\n    for (let i = 0; i < vertexes.length; i++) {\n      normalizedVertex.push({\n        x: Math.round((vertexes[i].x - opeInfo.center.x) / max.x * 1000) / 1000,\n        y: Math.round((vertexes[i].y - opeInfo.center.y) / max.y * 1000) / 1000,\n      });\n    }\n\n    return normalizedVertex;\n  }\n\n  // 描画コードを変更する関数\n  function generateVertexPutCode() {\n    let generatedVertexPutCode = \"\";\n    // 頂点を結ぶ線が直線であるか曲線か\n    if (!optionInfo.isCurveVertex) {\n      // 頂点の定義\n      generatedVertexPutCode += \"  for (let i = 0; i < v.length; i++)\\n    vertex(v[i].x * w, v[i].y * h);\\n\";\n\n      // 始点から終点を結ぶか否か\n      if (!optionInfo.isClose) {\n        generatedVertexPutCode += \"  endShape();\\n\";\n      } else {\n        generatedVertexPutCode += \"  endShape(CLOSE);\\n\";\n      }\n    } else {\n      // 始点から終点を結ぶか否か\n      if (!optionInfo.isClose) {\n        // 調整として始点の定義\n        generatedVertexPutCode += \"  curveVertex(v[0].x*w, v[0].y*h);\\n\";\n\n        // 頂点の配置\n        generatedVertexPutCode += \"  for (let i = 0; i < v.length; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n\";\n\n        // 調整として終点の再定義・図形を閉じる\n        generatedVertexPutCode += \"  curveVertex(v[v.length - 1].x*w, v[v.length - 1].y*h);\\n  endShape();\\n\";\n      } else {\n        if (opeInfo.vertexes.length < 3) {\n          // 調整として始点の定義\n          generatedVertexPutCode += \"  curveVertex(v[0].x*w, v[0].y*h);\\n\";\n\n          // 頂点の配置と図形を閉じる\n          generatedVertexPutCode += \"  for (let i = 0; i < v.length; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n  endShape(CLOSE);\\n\";\n        } else {\n          // 頂点の配置\n          generatedVertexPutCode += \"  for (let i = 0; i < v.length; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n\";\n\n          // 滑らかに図形を描画するために頂点の再配置\n          generatedVertexPutCode += \"  for (let i = 0; i < 3; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n  endShape();\\n\";\n        }\n      }\n    }\n\n    return generatedVertexPutCode;\n  }\n\n  return (\n    <div className=\"App\">\n      <Background BackgroundId=\"Background\" />\n\n      <div id='Contents'>\n        {/* ヘッダコンテンツ */}\n        <header>\n          <div className=\"title\">\n            <h1>Shape Maker p5.js</h1>\n          </div>\n          <div className=\"hyperlink\">\n            <ul>\n              <li><a href=\"https://editor.p5js.org/\">p5.js Web Editor</a></li>\n              <li><a href=\"https://openprocessing.org/\">OpenProcessing</a></li>\n            </ul>\n          </div>\n        </header>\n\n        {/* メインコンテンツ */}\n        <main>\n          <Operation generateCode={generateCode} className=\"mainLeftContent\" />\n          <div className=\"mainRightContent\">\n            <Option generateCode={generateCode} />\n            <Code generateCode={generateCode} generatedCode={completeGeneratedCode} />\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}