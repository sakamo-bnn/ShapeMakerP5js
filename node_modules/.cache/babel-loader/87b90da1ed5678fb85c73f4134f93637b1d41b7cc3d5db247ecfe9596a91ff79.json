{"ast":null,"code":"import _slicedToArray from \"C:/Users/takum/Desktop/p5js\\u30C4\\u30FC\\u30EB\\u958B\\u767A/01_React/1_\\u5236\\u4F5C/016/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\takum\\\\Desktop\\\\p5js\\u30C4\\u30FC\\u30EB\\u958B\\u767A\\\\01_React\\\\1_\\u5236\\u4F5C\\\\016\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport \"./styles.css\";\nimport Operation from './segment/Operation';\nimport Option from './segment/Option';\nimport Code from './segment/Code';\nimport Background from './segment/p5js/Background';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var optionInfo = {\n  isCurveVertex: false,\n  isClose: true,\n  center: {\n    num: 0,\n    mode: [\"BARYCENTER\", \"ORIGIN\"]\n  }\n};\n\n// 頂点情報\nexport var opeInfo = {\n  vertexes: [],\n  center: {\n    x: 0,\n    y: 0\n  }\n};\nexport default function App() {\n  _s();\n  // コードの内容\n  var _useState = useState(\"関数名を定義してください\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    completeGeneratedCode = _useState2[0],\n    setCompleteGeneratedCode = _useState2[1];\n  var generatedCode = \"\"; // 生成されたコードとして表示する文字列\n  var functionName = \"\"; // 関数名\n  var vertexDefinition = []; // 頂点の定義情報\n  var vertexPutCode = \"\"; // 頂点の配置(図形の描画)コード\n\n  // プログラムのコードを生成する関数(updateの内容のみ変更する)\n  function generateCode() {\n    vertexDefinition = normalizeVertex(opeInfo.vertexes).slice();\n    functionName = document.getElementById(\"functionName\").value;\n    vertexPutCode = generateVertexPutCode();\n\n    // 表示する文字列の作成\n    if (functionName.length == 0) {\n      // 関数名が未定義であるとき\n      generatedCode = \"関数名を定義してください\";\n    } else if (opeInfo.vertexes.length < 3) {\n      // 描画内容が点や線であるとき\n      generatedCode = \"頂点を3つ以上定義してください\";\n    } else {\n      // 描画コードを作成する\n      // 関数と引数，頂点の定義\n      generatedCode = \"function \".concat(functionName, \" (x, y, w, h){\\n  // \\u9802\\u70B9\\u5EA7\\u6A19\\u306E\\u5B9A\\u7FA9\\n  let v = [\\n\");\n      for (var i = 0; i < vertexDefinition.length; i++) {\n        generatedCode += \"    createVector(\".concat(vertexDefinition[i].x, \", \").concat(vertexDefinition[i].y, \" )\");\n        if (i < vertexDefinition.length - 1) generatedCode += \",\\n\";else generatedCode += \"\\n\";\n      }\n\n      // 頂点の定義(終了)と図形の描画開始\n      generatedCode += \"  ];\\n\\n  // 描画スタイルの設定\\n  push();\\n  translate(x, y);\\n\\n  // 図形の描画\\n  beginShape();\\n\";\n\n      // 頂点を配置して輪郭を描画するコード\n      generatedCode += vertexPutCode;\n\n      // 描画および関数の終了\n      generatedCode += \"\\n  // \\u63CF\\u753B\\u30B9\\u30BF\\u30A4\\u30EB\\u306E\\u5FA9\\u5143\\n  pop();\\n}\";\n    }\n\n    // コードの表示\n    setCompleteGeneratedCode(generatedCode);\n  }\n\n  // 中心の定義と頂点情報の正規化\n  function normalizeVertex(vertexes) {\n    var normalizedVertex = [];\n\n    // 図形の中心座標の初期化\n    opeInfo.center.x = 0;\n    opeInfo.center.y = 0;\n\n    // 図形の端の座標値\n    var max = {\n      x: 0,\n      y: 0\n    };\n\n    // 図形の中心座標を算出する\n    switch (optionInfo.center.mode[optionInfo.center.num]) {\n      case optionInfo.center.mode[0]:\n        // 重心\n        for (var i = 0; i < vertexes.length; i++) {\n          opeInfo.center.x += vertexes[i].x;\n          opeInfo.center.y += vertexes[i].y;\n        }\n        opeInfo.center.x /= vertexes.length;\n        opeInfo.center.y /= vertexes.length;\n        break;\n      case optionInfo.center.mode[1]:\n        // 座標軸の原点軸\n        opeInfo.center.x /= vertexes.length;\n        opeInfo.center.y /= vertexes.length;\n        break;\n      default:\n        // 想定外の処理(実行されない)\n        console.warn(\"normalizeVertex >> Unknown request \".concat(optionInfo.center.num, \".\"));\n        break;\n    }\n\n    // 中心からみたx, y座標の最大値を取得する\n    for (var _i = 0; _i < vertexes.length; _i++) {\n      var relative = {\n        x: Math.max(vertexes[_i].x, opeInfo.center.x) - Math.min(vertexes[_i].x, opeInfo.center.x),\n        y: Math.max(vertexes[_i].y, opeInfo.center.y) - Math.min(vertexes[_i].y, opeInfo.center.y)\n      };\n      if (max.x < relative.x) max.x = relative.x;\n      if (max.y < relative.y) max.y = relative.y;\n    }\n\n    // 頂点の正規化\n    for (var _i2 = 0; _i2 < vertexes.length; _i2++) {\n      normalizedVertex.push({\n        x: Math.round((vertexes[_i2].x - opeInfo.center.x) / max.x * 1000) / 1000,\n        y: Math.round((vertexes[_i2].y - opeInfo.center.y) / max.y * 1000) / 1000\n      });\n    }\n    return normalizedVertex;\n  }\n\n  // 描画コードを変更する関数\n  function generateVertexPutCode() {\n    var generatedVertexPutCode = \"\";\n    // 頂点を結ぶ線が直線であるか曲線か\n    if (!optionInfo.isCurveVertex) {\n      // 頂点の定義\n      generatedVertexPutCode += \"  for (let i = 0; i < v.length; i++)\\n    vertex(v[i].x * w, v[i].y * h);\\n\";\n\n      // 始点から終点を結ぶか否か\n      if (!optionInfo.isClose) {\n        generatedVertexPutCode += \"  endShape();\\n\";\n      } else {\n        generatedVertexPutCode += \"  endShape(CLOSE);\\n\";\n      }\n    } else {\n      // 始点から終点を結ぶか否か\n      if (!optionInfo.isClose) {\n        // 調整として始点の定義\n        generatedVertexPutCode += \"  curveVertex(v[0].x*w, v[0].y*h);\\n\";\n\n        // 頂点の配置\n        generatedVertexPutCode += \"  for (let i = 0; i < v.length; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n\";\n\n        // 調整として終点の再定義・図形を閉じる\n        generatedVertexPutCode += \"  curveVertex(v[v.length - 1].x*w, v[v.length - 1].y*h);\\n  endShape();\\n\";\n      } else {\n        if (opeInfo.vertexes.length < 3) {\n          // 調整として始点の定義\n          generatedVertexPutCode += \"  curveVertex(v[0].x*w, v[0].y*h);\\n\";\n\n          // 頂点の配置と図形を閉じる\n          generatedVertexPutCode += \"  for (let i = 0; i < v.length; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n  endShape(CLOSE);\\n\";\n        } else {\n          // 頂点の配置\n          generatedVertexPutCode += \"  for (let i = 0; i < v.length; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n\";\n\n          // 滑らかに図形を描画するために頂点の再配置\n          generatedVertexPutCode += \"  for (let i = 0; i < 3; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n  endShape();\\n\";\n        }\n      }\n    }\n    return generatedVertexPutCode;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Background, {\n      BackgroundId: \"Background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Shape Maker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hyperlink\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://editor.p5js.org/\",\n                children: \"p5.js Web Editor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://openprocessing.org/\",\n                children: \"OpenProcessing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(Operation, {\n          generateCode: generateCode,\n          className: \"mainLeftContent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mainRightContent\",\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            generateCode: generateCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Code, {\n            generateCode: generateCode,\n            generatedCode: completeGeneratedCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y/GWdaly2Q1AV1ZQBe79QClXJh0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Operation","Option","Code","Background","jsxDEV","_jsxDEV","optionInfo","isCurveVertex","isClose","center","num","mode","opeInfo","vertexes","x","y","App","_s","_useState","_useState2","_slicedToArray","completeGeneratedCode","setCompleteGeneratedCode","generatedCode","functionName","vertexDefinition","vertexPutCode","generateCode","normalizeVertex","slice","document","getElementById","value","generateVertexPutCode","length","concat","i","normalizedVertex","max","console","warn","relative","Math","min","push","round","generatedVertexPutCode","className","children","BackgroundId","fileName","_jsxFileName","lineNumber","columnNumber","id","href","_c","$RefreshReg$"],"sources":["C:/Users/takum/Desktop/p5jsツール開発/01_React/1_制作/016/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport \"./styles.css\";\nimport Operation from './segment/Operation';\nimport Option from './segment/Option'\nimport Code from './segment/Code'\nimport Background from './segment/p5js/Background'\n\nexport let optionInfo = {\n  isCurveVertex: false,\n  isClose: true,\n  center: {\n    num: 0,\n    mode: [\n      \"BARYCENTER\",\n      \"ORIGIN\",\n    ]\n  },\n};\n\n// 頂点情報\nexport let opeInfo = {\n  vertexes: [],\n  center: {\n    x: 0,\n    y: 0,\n  },\n};\n\nexport default function App() {\n  // コードの内容\n  const [completeGeneratedCode, setCompleteGeneratedCode] = useState(\"関数名を定義してください\");\n  let generatedCode = \"\";         // 生成されたコードとして表示する文字列\n  let functionName = \"\";          // 関数名\n  let vertexDefinition = [];      // 頂点の定義情報\n  let vertexPutCode = \"\";         // 頂点の配置(図形の描画)コード\n\n  // プログラムのコードを生成する関数(updateの内容のみ変更する)\n  function generateCode() {\n    vertexDefinition = normalizeVertex(opeInfo.vertexes).slice();\n    functionName = document.getElementById(\"functionName\").value;\n    vertexPutCode = generateVertexPutCode();\n\n    // 表示する文字列の作成\n    if (functionName.length == 0) {             // 関数名が未定義であるとき\n      generatedCode = \"関数名を定義してください\";\n    } else if (opeInfo.vertexes.length < 3) {   // 描画内容が点や線であるとき\n      generatedCode = \"頂点を3つ以上定義してください\";\n    } else {                                    // 描画コードを作成する\n      // 関数と引数，頂点の定義\n      generatedCode = `function ${functionName} (x, y, w, h){\\n  // 頂点座標の定義\\n  let v = [\\n`;\n\n      for (let i = 0; i < vertexDefinition.length; i++) {\n        generatedCode += `    createVector(${vertexDefinition[i].x}, ${vertexDefinition[i].y} )`;\n\n        if (i < (vertexDefinition.length - 1))\n          generatedCode += \",\\n\";\n        else\n          generatedCode += \"\\n\";\n      }\n\n      // 頂点の定義(終了)と図形の描画開始\n      generatedCode += \"  ];\\n\\n  // 描画スタイルの設定\\n  push();\\n  translate(x, y);\\n\\n  // 図形の描画\\n  beginShape();\\n\";\n\n      // 頂点を配置して輪郭を描画するコード\n      generatedCode += vertexPutCode;\n\n      // 描画および関数の終了\n      generatedCode += `\\n  // 描画スタイルの復元\\n  pop();\\n}`;\n    }\n\n    // コードの表示\n    setCompleteGeneratedCode(generatedCode);\n  }\n\n  // 中心の定義と頂点情報の正規化\n  function normalizeVertex(vertexes) {\n    let normalizedVertex = [];\n\n    // 図形の中心座標の初期化\n    opeInfo.center.x = 0;\n    opeInfo.center.y = 0;\n\n    // 図形の端の座標値\n    let max = {\n      x: 0,\n      y: 0,\n    };\n\n    // 図形の中心座標を算出する\n    switch (optionInfo.center.mode[optionInfo.center.num]) {\n      case optionInfo.center.mode[0]: // 重心\n        for (let i = 0; i < vertexes.length; i++) {\n          opeInfo.center.x += vertexes[i].x;\n          opeInfo.center.y += vertexes[i].y;\n        }\n        opeInfo.center.x /= vertexes.length;\n        opeInfo.center.y /= vertexes.length;\n        break;\n      case optionInfo.center.mode[1]: // 座標軸の原点軸\n        opeInfo.center.x /= vertexes.length;\n        opeInfo.center.y /= vertexes.length;\n        break;\n      default:                        // 想定外の処理(実行されない)\n        console.warn(`normalizeVertex >> Unknown request ${optionInfo.center.num}.`);\n        break;\n    }\n\n    // 中心からみたx, y座標の最大値を取得する\n    for (let i = 0; i < vertexes.length; i++) {\n      let relative = {\n        x: Math.max(vertexes[i].x, opeInfo.center.x) - Math.min(vertexes[i].x, opeInfo.center.x),\n        y: Math.max(vertexes[i].y, opeInfo.center.y) - Math.min(vertexes[i].y, opeInfo.center.y),\n      }\n\n\n      if (max.x < relative.x)\n        max.x = relative.x;\n\n      if (max.y < relative.y)\n        max.y = relative.y;\n    }\n\n    // 頂点の正規化\n    for (let i = 0; i < vertexes.length; i++) {\n      normalizedVertex.push({\n        x: Math.round((vertexes[i].x - opeInfo.center.x) / max.x * 1000) / 1000,\n        y: Math.round((vertexes[i].y - opeInfo.center.y) / max.y * 1000) / 1000,\n      });\n    }\n\n    return normalizedVertex;\n  }\n\n  // 描画コードを変更する関数\n  function generateVertexPutCode() {\n    let generatedVertexPutCode = \"\";\n    // 頂点を結ぶ線が直線であるか曲線か\n    if (!optionInfo.isCurveVertex) {\n      // 頂点の定義\n      generatedVertexPutCode += \"  for (let i = 0; i < v.length; i++)\\n    vertex(v[i].x * w, v[i].y * h);\\n\";\n\n      // 始点から終点を結ぶか否か\n      if (!optionInfo.isClose) {\n        generatedVertexPutCode += \"  endShape();\\n\";\n      } else {\n        generatedVertexPutCode += \"  endShape(CLOSE);\\n\";\n      }\n    } else {\n      // 始点から終点を結ぶか否か\n      if (!optionInfo.isClose) {\n        // 調整として始点の定義\n        generatedVertexPutCode += \"  curveVertex(v[0].x*w, v[0].y*h);\\n\";\n\n        // 頂点の配置\n        generatedVertexPutCode += \"  for (let i = 0; i < v.length; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n\";\n\n        // 調整として終点の再定義・図形を閉じる\n        generatedVertexPutCode += \"  curveVertex(v[v.length - 1].x*w, v[v.length - 1].y*h);\\n  endShape();\\n\";\n      } else {\n        if (opeInfo.vertexes.length < 3) {\n          // 調整として始点の定義\n          generatedVertexPutCode += \"  curveVertex(v[0].x*w, v[0].y*h);\\n\";\n\n          // 頂点の配置と図形を閉じる\n          generatedVertexPutCode += \"  for (let i = 0; i < v.length; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n  endShape(CLOSE);\\n\";\n        } else {\n          // 頂点の配置\n          generatedVertexPutCode += \"  for (let i = 0; i < v.length; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n\";\n\n          // 滑らかに図形を描画するために頂点の再配置\n          generatedVertexPutCode += \"  for (let i = 0; i < 3; i++)\\n    curveVertex(v[i].x * w, v[i].y * h);\\n  endShape();\\n\";\n        }\n      }\n    }\n\n    return generatedVertexPutCode;\n  }\n\n  return (\n    <div className=\"App\">\n      <Background BackgroundId=\"Background\" />\n\n      <div id='Contents'>\n        {/* ヘッダコンテンツ */}\n        <header>\n          <div className=\"title\">\n            <h1>Shape Maker</h1>\n          </div>\n          <div className=\"hyperlink\">\n            <ul>\n              <li><a href=\"https://editor.p5js.org/\">p5.js Web Editor</a></li>\n              <li><a href=\"https://openprocessing.org/\">OpenProcessing</a></li>\n            </ul>\n          </div>\n        </header>\n\n        {/* メインコンテンツ */}\n        <main>\n          <Operation generateCode={generateCode} className=\"mainLeftContent\" />\n          <div className=\"mainRightContent\">\n            <Option generateCode={generateCode} />\n            <Code generateCode={generateCode} generatedCode={completeGeneratedCode} />\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}