{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\takum\\\\Documents\\\\GitHub\\\\ShapeMakerP5js\\\\src\\\\segment\\\\p5js\\\\Background.js\",\n  _s = $RefreshSig$();\n/* **************************************** */\n/*                  背景                    */\n/* **************************************** */\nimport { useState } from 'react';\nimport Sketch from \"react-p5\";\nimport { createVector, map } from \"./libOriginal/p5jsOrigin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Background(_ref) {\n  _s();\n  let {\n    BackgroundId\n  } = _ref;\n  const [noiseCords, setNoiseCords] = useState([]);\n  let vertexNum = 16;\n  const setup = (p5, canvasParentRef) => {\n    let sketchNode = document.getElementById(BackgroundId);\n    let w = p5.windowWidth;\n    let h = p5.windowHeight;\n    p5.createCanvas(w, h).parent(canvasParentRef);\n\n    /* p5のスケッチ内容を梱包している要素の幅を調整する */\n    let sketchWrapper = sketchNode.childNodes[0];\n    sketchWrapper.style.width = w + 'px';\n    sketchWrapper.style.height = h + 'px';\n    p5.angleMode(p5.DEGREES);\n    p5.colorMode(p5.HSB);\n    p5.noFill();\n    noiseInit(p5);\n  };\n  const draw = p5 => {\n    let num = 35; // 線(層)の数\n    let rotateVelocity = 0.1; // 回転速度\n    let starStrkWeight = 2; // 図形のストロークの太さ\n    let amountOfNoiseChange = 0.00006; // ノイズの激しさ\n\n    // useStateタイプの変数の初期化が間に合わない場合のエラー処理\n    if (noiseCords.length == 0) {\n      noiseInit(p5);\n      return;\n    }\n\n    // 背景をクリアする\n    p5.blendMode(p5.BLEND); // 線形保管のブレンドモード(デフォルト)\n    p5.background(10);\n    p5.push();\n\n    // 描画スタイルの設定\n    p5.translate(p5.width / 2, p5.height / 2);\n    p5.rotate(rotateVelocity * p5.frameCount); // 回転の描画\n    p5.strokeWeight(starStrkWeight);\n\n    // 複数の図形の描画: 1ループ毎に1層だけ描画する\n    for (let l = 0; l < num; l++) {\n      let w = l * p5.width / 4 / num;\n\n      // 発光の描画設定\n      p5.blendMode(p5.SCREEN); // 色の逆数値\n      p5.stroke(0 + 180 / num * l, 80, 100); // 最も外側の層を色相の中間値に合わせる\n\n      displayShape(p5, 0, 0, w, w, l);\n      noiseUpdate(amountOfNoiseChange);\n    }\n    p5.pop();\n  };\n  function displayShape(p5, x, y, w, h, l) {\n    let v = [];\n    let amplitudeOfNoise; // ノイズの振れ幅\n\n    // 頂点座標の定義\n    v = [createVector(0.054, -0.581), createVector(0.158, -0.411), createVector(0.613, -0.522), createVector(0.413, -0.052), createVector(1, 0.256), createVector(0.724, 0.635), createVector(0.289, 0.276), createVector(0.151, 0.753), createVector(-0.028, 0.262), createVector(-0.277, 0.655), createVector(-0.36, 0.073), createVector(-0.871, 0.302), createVector(-0.988, -0.3), createVector(-0.353, -0.084), createVector(-0.415, -1), createVector(-0.111, -0.261)];\n    if (p5.width > p5.height) {\n      amplitudeOfNoise = p5.width / 20;\n    } else {\n      amplitudeOfNoise = p5.height / 20;\n    }\n    p5.push();\n\n    // 座標変換\n    p5.translate(x, y);\n    p5.beginShape();\n    for (let i = 0; i < v.length; i++) {\n      let vertexIndex = i % v.length;\n      v[vertexIndex].multV(createVector(w, h));\n\n      // ノイズベクトルの算出\n      let noiseVector = createVector(map(p5.noise(noiseCords[vertexIndex].x), 0, 1, -0.2, 0.2), map(p5.noise(noiseCords[vertexIndex].y), 0, 1, -0.2, 0.2));\n\n      // 外層ほど大きいノイズの影響を受ける\n      noiseVector.mult(l * amplitudeOfNoise);\n\n      // 各頂点にノイズを加える\n      v[vertexIndex].addV(createVector(noiseVector.x, noiseVector.y));\n      p5.curveVertex(v[vertexIndex].x, v[vertexIndex].y);\n    }\n    p5.curveVertex(v[0].x, v[0].y);\n    p5.curveVertex(v[1].x, v[1].y);\n    p5.curveVertex(v[2].x, v[2].y);\n    p5.endShape();\n    p5.pop();\n  }\n  function noiseInit(p5) {\n    let newNoiseCords = [];\n\n    // キャンバスの縦横比率に合わせたノイズの成分定義\n    let windowRate = {\n      w: p5.width / 2,\n      h: p5.height / 2\n    };\n    if (p5.width > p5.height) {\n      windowRate.w /= p5.width;\n      windowRate.h /= p5.width;\n    } else {\n      windowRate.w /= p5.height;\n      windowRate.h /= p5.height;\n    }\n\n    // ノイズの初期化\n    for (let i = 0; i < vertexNum; i++) {\n      newNoiseCords[i] = createVector(p5.random(-windowRate.w, windowRate.w), p5.random(-windowRate.h, windowRate.h));\n    }\n    setNoiseCords(newNoiseCords.slice());\n  }\n\n  // ノイズを更新する\n  function noiseUpdate(amountOfChange) {\n    for (let i = 0; i < vertexNum; i++) noiseCords[i].addV(createVector(amountOfChange, amountOfChange));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: BackgroundId,\n    children: /*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(Background, \"ztcsfZ7Q29uhEM+6NAr7SCmPQBM=\");\n_c = Background;\n;\nvar _c;\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"names":["useState","Sketch","createVector","map","jsxDEV","_jsxDEV","Background","_ref","_s","BackgroundId","noiseCords","setNoiseCords","vertexNum","setup","p5","canvasParentRef","sketchNode","document","getElementById","w","windowWidth","h","windowHeight","createCanvas","parent","sketchWrapper","childNodes","style","width","height","angleMode","DEGREES","colorMode","HSB","noFill","noiseInit","draw","num","rotateVelocity","starStrkWeight","amountOfNoiseChange","length","blendMode","BLEND","background","push","translate","rotate","frameCount","strokeWeight","l","SCREEN","stroke","displayShape","noiseUpdate","pop","x","y","v","amplitudeOfNoise","beginShape","i","vertexIndex","multV","noiseVector","noise","mult","addV","curveVertex","endShape","newNoiseCords","windowRate","random","slice","amountOfChange","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/takum/Documents/GitHub/ShapeMakerP5js/src/segment/p5js/Background.js"],"sourcesContent":["/* **************************************** */\r\n/*                  背景                    */\r\n/* **************************************** */\r\nimport { useState } from 'react';\r\nimport Sketch from \"react-p5\";\r\nimport { createVector, map } from \"./libOriginal/p5jsOrigin\"\r\n\r\nexport default function Background({ BackgroundId }) {\r\n  const [noiseCords, setNoiseCords] = useState([]);\r\n  let vertexNum = 16;\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    let sketchNode = document.getElementById(BackgroundId);\r\n\r\n    let w = p5.windowWidth;\r\n    let h = p5.windowHeight;\r\n\r\n    p5.createCanvas(w, h).parent(canvasParentRef);\r\n\r\n    /* p5のスケッチ内容を梱包している要素の幅を調整する */\r\n    let sketchWrapper = sketchNode.childNodes[0];\r\n\r\n    sketchWrapper.style.width = w + 'px';\r\n    sketchWrapper.style.height = h + 'px';\r\n\r\n    p5.angleMode(p5.DEGREES);\r\n    p5.colorMode(p5.HSB);\r\n    p5.noFill();\r\n\r\n    noiseInit(p5);\r\n  };\r\n\r\n  const draw = (p5) => {\r\n    let num = 35;                       // 線(層)の数\r\n    let rotateVelocity = 0.1;           // 回転速度\r\n    let starStrkWeight = 2;             // 図形のストロークの太さ\r\n    let amountOfNoiseChange = 0.00006;  // ノイズの激しさ\r\n\r\n    // useStateタイプの変数の初期化が間に合わない場合のエラー処理\r\n    if (noiseCords.length == 0) {\r\n      noiseInit(p5);\r\n      return;\r\n    }\r\n\r\n    // 背景をクリアする\r\n    p5.blendMode(p5.BLEND); // 線形保管のブレンドモード(デフォルト)\r\n    p5.background(10);\r\n\r\n    p5.push();\r\n\r\n    // 描画スタイルの設定\r\n    p5.translate(p5.width / 2, p5.height / 2);\r\n    p5.rotate(rotateVelocity * p5.frameCount);  // 回転の描画\r\n    p5.strokeWeight(starStrkWeight);\r\n\r\n    // 複数の図形の描画: 1ループ毎に1層だけ描画する\r\n    for (let l = 0; l < num; l++) {\r\n      let w = l * p5.width / 4 / num;\r\n\r\n      // 発光の描画設定\r\n      p5.blendMode(p5.SCREEN);                  // 色の逆数値\r\n      p5.stroke(0 + (180 / num) * l, 80, 100);  // 最も外側の層を色相の中間値に合わせる\r\n\r\n      displayShape(p5, 0, 0, w, w, l);\r\n      noiseUpdate(amountOfNoiseChange);\r\n    }\r\n    p5.pop();\r\n  };\r\n\r\n  function displayShape(p5, x, y, w, h, l) {\r\n    let v = [];\r\n    let amplitudeOfNoise;            // ノイズの振れ幅\r\n\r\n    // 頂点座標の定義\r\n    v = [\r\n      createVector(0.054, -0.581),\r\n      createVector(0.158, -0.411),\r\n      createVector(0.613, -0.522),\r\n      createVector(0.413, -0.052),\r\n      createVector(1, 0.256),\r\n      createVector(0.724, 0.635),\r\n      createVector(0.289, 0.276),\r\n      createVector(0.151, 0.753),\r\n      createVector(-0.028, 0.262),\r\n      createVector(-0.277, 0.655),\r\n      createVector(-0.36, 0.073),\r\n      createVector(-0.871, 0.302),\r\n      createVector(-0.988, -0.3),\r\n      createVector(-0.353, -0.084),\r\n      createVector(-0.415, -1),\r\n      createVector(-0.111, -0.261)\r\n    ];\r\n\r\n    if (p5.width > p5.height) {\r\n      amplitudeOfNoise = p5.width / 20;\r\n    } else {\r\n      amplitudeOfNoise = p5.height / 20;\r\n    }\r\n\r\n    p5.push();\r\n\r\n    // 座標変換\r\n    p5.translate(x, y);\r\n\r\n    p5.beginShape();\r\n\r\n    for (let i = 0; i < (v.length); i++) {\r\n      let vertexIndex = i % v.length;\r\n\r\n      v[vertexIndex].multV(createVector(w, h));\r\n\r\n      // ノイズベクトルの算出\r\n      let noiseVector = createVector(\r\n        map(p5.noise(noiseCords[vertexIndex].x), 0, 1, -0.2, 0.2),\r\n        map(p5.noise(noiseCords[vertexIndex].y), 0, 1, -0.2, 0.2)\r\n      );\r\n\r\n      // 外層ほど大きいノイズの影響を受ける\r\n      noiseVector.mult(l * amplitudeOfNoise);\r\n\r\n      // 各頂点にノイズを加える\r\n      v[vertexIndex].addV(createVector(noiseVector.x, noiseVector.y));\r\n\r\n      p5.curveVertex(v[vertexIndex].x, v[vertexIndex].y);\r\n    }\r\n\r\n    p5.curveVertex(v[0].x, v[0].y);\r\n    p5.curveVertex(v[1].x, v[1].y);\r\n    p5.curveVertex(v[2].x, v[2].y);\r\n\r\n    p5.endShape();\r\n\r\n    p5.pop();\r\n  }\r\n\r\n  function noiseInit(p5) {\r\n    let newNoiseCords = [];\r\n\r\n    // キャンバスの縦横比率に合わせたノイズの成分定義\r\n    let windowRate = {\r\n      w: p5.width / 2,\r\n      h: p5.height / 2,\r\n    };\r\n\r\n    if (p5.width > p5.height) {\r\n      windowRate.w /= p5.width;\r\n      windowRate.h /= p5.width;\r\n    } else {\r\n      windowRate.w /= p5.height;\r\n      windowRate.h /= p5.height;\r\n    }\r\n\r\n    // ノイズの初期化\r\n    for (let i = 0; i < vertexNum; i++) {\r\n      newNoiseCords[i] = createVector(\r\n        p5.random(-windowRate.w, windowRate.w),\r\n        p5.random(-windowRate.h, windowRate.h)\r\n      );\r\n    }\r\n\r\n    setNoiseCords(newNoiseCords.slice());\r\n  }\r\n\r\n  // ノイズを更新する\r\n  function noiseUpdate(amountOfChange) {\r\n    for (let i = 0; i < vertexNum; i++)\r\n      noiseCords[i].addV(createVector(amountOfChange, amountOfChange));\r\n  }\r\n\r\n  return (\r\n    <div id={BackgroundId}>\r\n      <Sketch\r\n        setup={setup}\r\n        draw={draw}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}